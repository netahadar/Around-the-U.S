!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){var n=e.data,r=e.user,o=e.cardSelector,i=e.handleCardClick,a=e.handleDeleteCard,u=e.handleLikes;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._text=n.name,this._image=n.link,this._cardId=n._id,this._ownerId=n.owner._id,this._userId=r,this._likes=n.likes,this._cardSelector=o,this._handleCardClick=i,this._handleDeleteCard=a,this._handleLikes=u}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".gallery__item").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".gallery__photo"),this._setEventListeners(),this._cardImage.src=this._image,this._cardImage.alt=this._text,this._element.querySelector(".gallery__text").textContent=this._text,this._renderLikes(),this._ownerId!==this._userId&&this._element.querySelector(".gallery__trash-button").remove(),this._element}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".gallery__like-button").addEventListener("click",(function(){e._handleLikes(e._cardId)})),this._element.querySelector(".gallery__trash-button").addEventListener("click",(function(){return e._handleDeleteCard(e._cardId)})),this._cardImage.addEventListener("click",(function(t){return e._handleCardClick(t)}))}},{key:"isLiked",value:function(){var e=this;return this._likes.some((function(t){return t._id===e._userId}))}},{key:"updateLikes",value:function(e){this._likes=e,this._renderLikes()}},{key:"_renderLikes",value:function(){this.isLiked()?this._element.querySelector(".gallery__like-button").classList.add("gallery__like-button_active"):this._element.querySelector(".gallery__like-button").classList.remove("gallery__like-button_active"),this._element.querySelector(".gallery__like-counter").textContent=this._likes.length}},{key:"deleteCard",value:function(){this._element.remove(),this._element=null}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._initialFormConfig=t,this._formElement=n,this._submitButton=this._formElement.querySelector(this._initialFormConfig.submitButtonSelector),this._inputList=Array.from(this._formElement.querySelectorAll(this._initialFormConfig.inputSelector))}var t,r;return t=e,(r=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._initialFormConfig.inputErrorClass),n.textContent=t,n.classList.add(this._initialFormConfig.errorMessageClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._initialFormConfig.inputErrorClass),t.classList.remove(this._initialFormConfig.errorMessageClass),t.textContent=""}},{key:"resetValidation",value:function(){var e=this;this._inputList.forEach((function(t){e._formElement.reset(),e._hideInputError(t)})),this._toggleSubmitButtonState()}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleSubmitButtonState",value:function(){this._hasInvalidInput()?(this._submitButton.disabled=!0,this._submitButton.classList.add(this._initialFormConfig.inactiveButtonClass)):(this._submitButton.disabled=!1,this._submitButton.classList.remove(this._initialFormConfig.inactiveButtonClass))}},{key:"_setFormEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleSubmitButtonState()}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setFormEventListeners()}}])&&n(t.prototype,r),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=t,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){e.forEach(this._renderer)}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&o(t.prototype,n),e}(),a=document.forms.avatar,u=document.querySelector(".profile__edit-button"),c=document.forms.profile,s=c.elements.name,l=c.elements.about,f=(document.querySelector(".popup__photo"),document.querySelector(".popup__text"),document.querySelector(".profile__add-button")),p=document.forms.post,h=(document.querySelector(".gallery-post").content,{formSelector:".popup__form",inputSelector:".popup__form-input",submitButtonSelector:".popup__form-submit-button",inactiveButtonClass:"popup__form-submit-button_inactive",inputErrorClass:"popup__form-input_type_error",errorMessageClass:"popup__form-input-error_active"});function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var y=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this.open=this.open.bind(this)}var t,n;return t=e,(n=[{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.querySelector(".popup__close-button").addEventListener("click",(function(){e.close()})),this._popupElement.addEventListener("click",(function(t){t.target.classList.contains("popup")&&e.close()}))}}])&&d(t.prototype,n),e}();function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(e,t,n){return m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},m(e,t,n||e)}function b(e,t){return b=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},b(e,t)}function g(e,t){if(t&&("object"===_(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function k(e){return k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},k(e)}var E=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&b(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=k(r);if(o){var n=k(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return g(this,e)});function a(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),i.call(this,e)}return t=a,(n=[{key:"open",value:function(e,t){var n=this._popupElement.querySelector(".popup__photo"),r=this._popupElement.querySelector(".popup__text");n.src=e,r.textContent=t,m(k(a.prototype),"open",this).call(this)}}])&&v(t.prototype,n),a}(y);function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function C(e,t,n){return C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},C(e,t,n||e)}function L(e,t){return L=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},L(e,t)}function O(e,t){if(t&&("object"===S(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function I(e){return I=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},I(e)}var j=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&L(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=I(r);if(o){var n=I(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return O(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._handleSubmit=t,n._formElement=n._popupElement.querySelector(".popup__form"),n}return t=a,(n=[{key:"getInputValues",value:function(){var e=Array.from(this._formElement.querySelectorAll(".popup__form-input")),t={};return e.forEach((function(e){t[e.name]=e.value})),t}},{key:"renderSaving",value:function(e){this._formElement.querySelector(".popup__form-submit-button").textContent=e?"Saving...":"Save"}},{key:"setEventListeners",value:function(){var e=this;C(I(a.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(){e._handleSubmit(),e.close()}))}},{key:"close",value:function(){C(I(a.prototype),"close",this).call(this),this._formElement.reset()}}])&&w(t.prototype,n),a}(y);function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var q=function(){function e(t){var n=t.name,r=t.about,o=t.avatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._about=document.querySelector(r),this._avatar=document.querySelector(o),this.setUserInfo=this.setUserInfo.bind(this)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){var e={};return e.userName=this._name.textContent,e.userJob=this._about.textContent,e}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._about.textContent=e.about}},{key:"setAvatar",value:function(e){this._avatar.style.backgroundImage="url('".concat(e,"')")}}])&&P(t.prototype,n),e}();function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var T=function(e,t){return fetch(e,t).then((function(e){if(e.ok)return e.json();Promise.reject("ERROR: ".concat(e.statusText))}))},x=new(function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t,this._headers=n}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return T("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}},{key:"setUserAvatar",value:function(e){return T("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.link})})}},{key:"getInitialCards",value:function(){return T("".concat(this._baseUrl,"/cards"),{headers:this._headers})}},{key:"sendNewData",value:function(e){return T("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})})}},{key:"createNewCard",value:function(e){return T("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})})}},{key:"deleteCard",value:function(e){return T("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers})}},{key:"addLike",value:function(e){return T("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers})}},{key:"dislike",value:function(e){return T("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers})}}])&&R(t.prototype,n),e}())("https://around.nomoreparties.co/v1/group-12",{authorization:"12be1991-4f28-449f-a9a9-71d4704b25a2","Content-Type":"application/json"});function U(e){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},U(e)}function B(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function V(e,t,n){return V="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=N(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},V(e,t,n||e)}function A(e,t){return A=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},A(e,t)}function F(e,t){if(t&&("object"===U(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function N(e){return N=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},N(e)}var J=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&A(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=N(r);if(o){var n=N(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return F(this,e)});function a(){return B(this,a),i.apply(this,arguments)}return t=a,(n=[{key:"setAction",value:function(e){this._handleSubmit=e}},{key:"setEventListeners",value:function(){var e=this;V(N(a.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmit()}))}}])&&D(t.prototype,n),a}(j),M=new J(".popup_type_delete");M.setEventListeners();var H,z=new E(".popup_type_photo"),G=new i((function(e){var n;G.addItem((n=new t({data:e,user:H,cardSelector:".gallery-post",handleCardClick:function(e){e.preventDefault();var t=e.target,n=t.src,r=t.alt;z.open(n,r),z.setEventListeners()},handleDeleteCard:function(e){M.open(),M.setAction((function(){return x.deleteCard(e).then((function(e){n.deleteCard(),M.close()})).catch((function(e){return console.log(e)}))}))},handleLikes:function(e){n.isLiked()?x.dislike(e).then((function(e){n.updateLikes(e.likes)})).catch((function(e){return console.log(e)})):x.addLike(e).then((function(e){n.updateLikes(e.likes)})).catch((function(e){return console.log(e)}))}})).generateCard())}),".gallery__list"),K=new q({name:".profile__name",about:".profile__job-description",avatar:".profile__avatar-container"});x.getUserInfo().then((function(e){K.setUserInfo(e),H=e._id,K.setAvatar(e.avatar)})).catch((function(e){return console.log(e)})),x.getInitialCards().then((function(e){G.renderItems(e)})).catch((function(e){return console.log(e)}));var Q=new j(".popup_type_profile",(function(){Q.renderSaving(!0),x.sendNewData(Q.getInputValues()).then((function(e){K.setUserInfo(e)})).catch((function(e){return console.log(e)})).finally((function(){Q.renderSaving(!1)}))}));Q.setEventListeners(),u.addEventListener("click",(function(){W.resetValidation(),Q.open();var e=K.getUserInfo();s.value=e.userName,l.value=e.userJob}));var W=new r(h,c);W.enableValidation();var X=new j(".popup_type_post",(function(){X.renderSaving(!0),x.createNewCard(X.getInputValues()).then((function(e){G.renderItems([e])})).catch((function(e){return console.log(e)})).finally((function(){X.renderSaving(!1)}))}));X.setEventListeners(),f.addEventListener("click",(function(){Y.resetValidation(),X.open()}));var Y=new r(h,p);Y.enableValidation();var Z=new j(".popup_type_avatar",(function(){Z.renderSaving(!0),x.setUserAvatar(Z.getInputValues()).then((function(e){K.setAvatar(e.avatar)})).catch((function(e){return console.log(e)})).finally((function(){Z.renderSaving(!1)}))}));Z.setEventListeners(),document.querySelector(".profile__avatar-edit").addEventListener("click",(function(){$.resetValidation(),Z.open()}));var $=new r(h,a);$.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,